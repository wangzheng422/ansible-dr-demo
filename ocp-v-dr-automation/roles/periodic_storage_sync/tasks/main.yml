---
# tasks file for periodic_storage_sync

- name: "Sync data for a PersistentVolumeClaim"
  when: pvc_object is defined and pv_object is defined and pv_object.spec.nfs.path is defined
  block:
    - name: "Log PV and PVC info"
      ansible.builtin.debug:
        msg: "Starting sync for PVC {{ pvc_object.metadata.namespace }}/{{ pvc_object.metadata.name }} -> PV {{ pv_object.metadata.name }}"

    - name: "Calculate DR PV path by replacing the base path"
      ansible.builtin.set_fact:
        dr_pv_path: "{{ pv_object.spec.nfs.path | regex_replace('^' + primary_nfs_base_path, dr_nfs_base_path) }}"

    - name: "Execute rsync for the PV directory"
      ansible.posix.synchronize:
        src: "{{ pv_object.spec.nfs.path }}/"
        dest: "{{ dr_nfs_server_user }}@{{ dr_nfs_server }}:{{ dr_pv_path }}"
        archive: yes
        delete: yes
        use_ssh_args: yes
        # Make sure to use the correct host that can access the source path
      delegate_to: "{{ primary_nfs_server }}"

    - name: "Modify PV definition for DR"
      ansible.builtin.set_fact:
        dr_pv_object: "{{ pv_object | combine({'spec': {'nfs': {'server': dr_nfs_server, 'path': dr_pv_path}}}, recursive=True) }}"

    - name: "Clean up PV metadata for DR"
      ansible.builtin.set_fact:
        dr_pv_definition: "{{ dr_pv_object | combine({'metadata': dr_pv_object.metadata | combine({'resourceVersion': omit, 'uid': omit, 'creationTimestamp': omit, 'annotations': omit})}) | combine({'status': omit}) }}"

    - name: "Create or Update PV on DR cluster"
      kubernetes.core.k8s:
        state: present
        definition: "{{ dr_pv_definition }}"
        host: "{{ ocp_dr_api_server }}"
        api_key: "{{ ocp_dr_api_key }}"
        validate_certs: false

    - name: "Clean up PVC metadata for DR"
      ansible.builtin.set_fact:
        dr_pvc_definition: "{{ pvc_object | combine({'metadata': pvc_object.metadata | combine({'resourceVersion': omit, 'uid': omit, 'creationTimestamp': omit, 'annotations': omit, 'ownerReferences': omit})}) | combine({'status': omit}) }}"

    - name: "Create or Update PVC on DR cluster"
      kubernetes.core.k8s:
        state: present
        definition: "{{ dr_pvc_definition }}"
        host: "{{ ocp_dr_api_server }}"
        api_key: "{{ ocp_dr_api_key }}"
        validate_certs: false

    - name: "Log PV and PVC sync status"
      ansible.builtin.debug:
        msg: "Successfully synced and provisioned PV {{ pv_object.metadata.name }} and PVC {{ pvc_object.metadata.name }} on DR cluster."

- name: "Sync metadata for a VolumeSnapshot"
  when: snapshot_object is defined and content_object is defined
  block:
    - name: "Log VolumeSnapshot and VolumeSnapshotContent info"
      ansible.builtin.debug:
        msg: "Starting metadata sync for VS {{ snapshot_object.metadata.namespace }}/{{ snapshot_object.metadata.name }} -> VSC {{ content_object.metadata.name }}"

    # - name: "Sync VS and VSC metadata to DR metadata store"
    #   ansible.builtin.copy:
    #     content: "{{ item.content | to_nice_yaml }}"
    #     dest: "{{ dr_metadata_path }}/{{ item.kind }}-{{ item.name }}.yml"
    #   loop:
    #     - { name: "{{ snapshot_object.metadata.name }}", content: "{{ snapshot_object }}", kind: "vs" }
    #     - { name: "{{ content_object.metadata.name }}", content: "{{ content_object }}", kind: "vsc" }
    #   delegate_to: localhost

    - name: "Log snapshot metadata sync status"
      ansible.builtin.debug:
        msg: "Successfully synced metadata for VolumeSnapshot {{ snapshot_object.metadata.name }} and its content. (Note: Sync logic is currently disabled)"
