---
# tasks file for periodic_storage_sync

- name: "Sync metadata for a VolumeSnapshot"
  when: snapshot_object is defined and content_object is defined
  block:
    - name: "Log VolumeSnapshot and VolumeSnapshotContent info"
      ansible.builtin.debug:
        msg: "Starting metadata sync for VS {{ snapshot_object.metadata.namespace }}/{{ snapshot_object.metadata.name }} -> VSC {{ content_object.metadata.name }}"

    - name: "Clean up VolumeSnapshot metadata for DR"
      ansible.builtin.set_fact:
        dr_snapshot_definition: "{{ snapshot_object | combine({'metadata': snapshot_object.metadata | combine({'resourceVersion': omit, 'uid': omit, 'creationTimestamp': omit, 'annotations': omit})}) | combine({'status': omit}) }}"

    - name: "Clean up VolumeSnapshotContent metadata for DR"
      ansible.builtin.set_fact:
        dr_content_definition: "{{ content_object | combine({'metadata': content_object.metadata | combine({'resourceVersion': omit, 'uid': omit, 'creationTimestamp': omit, 'annotations': omit})}) | combine({'spec': content_object.spec | combine({'source': {'volumeHandle': omit}})}) | combine({'status': omit}) }}"

    - name: "Create or Update VolumeSnapshot on DR cluster"
      kubernetes.core.k8s:
        state: present
        definition: "{{ dr_snapshot_definition }}"
        host: "{{ ocp_dr_api_server }}"
        api_key: "{{ ocp_dr_api_key }}"
        validate_certs: false

    - name: "Create or Update VolumeSnapshotContent on DR cluster"
      kubernetes.core.k8s:
        state: present
        definition: "{{ dr_content_definition }}"
        host: "{{ ocp_dr_api_server }}"
        api_key: "{{ ocp_dr_api_key }}"
        validate_certs: false

    - name: "Log snapshot metadata sync status"
      ansible.builtin.debug:
        msg: "Successfully synced metadata for VolumeSnapshot {{ snapshot_object.metadata.name }} and its content."
